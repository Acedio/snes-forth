0 BANK!

BANK@
LOWRAM BANK!
CREATE MISSED-FRAMES 1 CELLS ALLOT
BANK!

BANK@
LOWRAM BANK!
CREATE NMI-READY 1 CELLS ALLOT
CREATE NMI-STATE 1 CELLS ALLOT
CREATE GAME-STATE 1 CELLS ALLOT
BANK!

<STATES
  STATE: GAME-STATE-TITLE
  STATE: GAME-STATE-LEVEL
  STATE: GAME-STATE-END
STATES>COUNT: #GAME-STATES

#GAME-STATES
<STATE-MACHINE GAME-FSM
  GAME-STATE-TITLE STATE-BEHAVIOR:
    TITLE-MAIN IF
      LEVEL-INIT
      GAME-STATE-LEVEL STATE!
    THEN
  ;
  GAME-STATE-LEVEL STATE-BEHAVIOR:
    LEVEL-MAIN IF
      END-INIT
      GAME-STATE-END STATE!
    THEN
  ;
  GAME-STATE-END STATE-BEHAVIOR:
    END-MAIN IF
      TITLE-INIT
      GAME-STATE-TITLE STATE!
    THEN
  ;
STATE-MACHINE>

: SNES-NMI
  NMI-READY @ 0= IF
    \ We missed a frame.
    1 MISSED-FRAMES +!
    EXIT
  THEN

  FALSE NMI-READY !

  NMI-STATE @ CASE
    0 OF
      \ Disable all layers initially.
      0x00 BG-LAYER-ENABLE C!
      \ Set Mode 1 BG3 high priority (0x.9), BG1 BG2 BG3 tile size 16x16 (0x7.)
      0x79 BG-MODE C!

      \ Minimum screen brightness
      0 SET-SCREEN-BRIGHTNESS

      1 NMI-STATE +!
    ENDOF
    1 OF
      GAME-STATE @ CASE
        GAME-STATE-TITLE OF
          TITLE-NMI
        ENDOF
        GAME-STATE-LEVEL OF
          LEVEL-NMI
        ENDOF
        GAME-STATE-END OF
          END-NMI
        ENDOF
      ENDCASE
    ENDOF
  ENDCASE

  \ Wait for copying until the subcomponents had a chance to modify.
  COPY-BASE-REGISTERS
;

: SNES-MAIN
  FALSE NMI-READY !
  0 NMI-STATE !
  GAME-STATE-TITLE GAME-STATE !
  0 MISSED-FRAMES !

  INIT-BASE-REGISTERS

  0 JOY1-HELD !
  0 JOY1-PRESSED !

  BG1-SHADOW-TILEMAP ZERO-BGTILEMAP
  BG3-SHADOW-TILEMAP ZERO-BGTILEMAP

  AUDIO-INIT
  NMI-ENABLE

  ZERO-OAM

  TITLE-INIT

  AUDIO-PLAY-SONG

  0
  BEGIN
    1+

    READ-JOY1

    GAME-STATE @ CASE
      GAME-STATE-TITLE OF
        TITLE-MAIN IF
          LEVEL-INIT
          GAME-STATE-LEVEL GAME-STATE !
        THEN
      ENDOF
      GAME-STATE-LEVEL OF
        LEVEL-MAIN IF
          END-INIT
          GAME-STATE-END GAME-STATE !
        THEN
      ENDOF
      GAME-STATE-END OF
        END-MAIN IF
          TITLE-INIT
          GAME-STATE-TITLE GAME-STATE !
        THEN
      ENDOF
    ENDCASE

    AUDIO-UPDATE

    TRUE NMI-READY !
    BEGIN
      NMI-WAIT
    NMI-READY @ 0= UNTIL
  FALSE UNTIL
;
